{"version":3,"file":"static/js/875.38a21cd0.chunk.js","mappings":"2QAIaA,EAAc,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UACzD,OACE,2BACE,gBACEC,IAAKH,EANW,mCAMsBA,EAAeI,IACrDC,IAAKJ,KAGP,wBAAKA,KACL,uCAAeC,GAAa,sBAGjC,E,UCXYI,EAAO,WAChB,IAAOC,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,qGACuBC,EAAAA,EAAAA,IAAeR,GADtC,OACUG,EADV,OAEIC,EAAQD,GAFZ,2CADY,yBAAC,WAAD,gCAKZM,GAAYC,OAAM,SAAAL,GACdC,EAAS,gDACTK,QAAQN,MAAMA,EACjB,GACF,GAAC,CAACL,IAEDK,GACO,wBAAKA,KAIZ,4BACG,+BACEF,QADF,IACEA,OADF,EACEA,EAAMS,KAAI,SAACC,GACR,OACI,SAACrB,EAAD,CACAC,aAAcoB,EAAUpB,aACxBC,cAAemB,EAAUnB,cACzBC,UAAWkB,EAAUlB,WAHHkB,EAAUC,GAKnC,OAEAX,EAAKY,SAAU,mEAG3B,C,iOCtCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACRF,EAAAA,EAAAA,IAAU,oBAAqB,CAClDG,OAAQ,CACJC,QAASH,KAHc,cACzBI,EADyB,yBAOxBA,EAASC,KAAKC,SAPU,2CAAH,qDAUnBC,EAAc,mCAAG,WAAOC,GAAP,uFACHT,EAAAA,EAAAA,IAAA,iBAAoBS,GAAY,CACnDN,OAAQ,CACJC,QAASH,EACTS,SAAU,WAJQ,cACpBL,EADoB,yBAQnBA,EAASC,MARU,2CAAH,sDAWdd,EAAc,mCAAG,WAAOiB,GAAP,uFACHT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAwC,CAC3DN,OAAQ,CACJC,QAASH,EACTS,SAAU,WAJQ,cACpBL,EADoB,yBAOnBA,EAASC,KAAKnB,MAPK,2CAAH,sDAUdwB,EAAiB,mCAAG,WAAOF,GAAP,uFACNT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAwC,CAC3DN,OAAQ,CACJC,QAASH,EACTS,SAAU,QACVE,KAAM,KALe,cACvBP,EADuB,yBAQtBA,EAASC,KAAKC,SARQ,2CAAH,sDAYjBM,EAAuB,mCAAG,WAAOC,GAAP,uFACZd,EAAAA,EAAAA,IAAU,gBAAiB,CAC9CG,OAAQ,CACJC,QAASH,EACTc,MAAOD,EACPJ,SAAU,QACVE,KAAM,EACNI,eAAe,KAPY,cAC7BX,EAD6B,yBAW5BA,EAASC,KAAKC,SAXc,2CAAH,qD","sources":["components/CastDetails/CastDetails.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport DefaultImage from 'components/DefaultImage';\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n\nexport const CastDetails = ({ profile_path, original_name, character }) => {\n  return (\n    <li>\n      <img\n        src={profile_path ? IMAGES_BASE_URL + profile_path : DefaultImage}\n        alt={original_name}\n      />\n\n      <h4>{original_name}</h4>\n      <p>Character: {character || 'No information'}</p>\n    </li>\n  );\n};\n\nCastDetails.propTypes = {\n  profile_path: PropTypes.string,\n  original_name: PropTypes.string,\n  character: PropTypes.string,\n};\n","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { CastDetails } from \"components/CastDetails\";\nimport { fetchMovieCast } from \"services/api\";\n\nexport const Cast = () => {\n    const {movieId} = useParams();\n    const [cast, setCast] = useState([]);\n    const [error, setError] = useState(\"\");\n\n    useEffect(() => {\n        async function fetchCast() {\n            const cast = await fetchMovieCast(movieId);\n            setCast(cast);\n        }\n        fetchCast().catch(error => {\n            setError(\"Something went wrong, please try again later\");\n            console.error(error);\n        });\n      },[movieId])\n\n    if (error) {\n        return <h1>{error}</h1>\n    }  \n\n    return (\n        <div>\n           <ul>\n            {cast?.map((castValue) => {\n                return (\n                    <CastDetails key={castValue.id}\n                    profile_path={castValue.profile_path}\n                    original_name={castValue.original_name}\n                    character={castValue.character}/>\n                )\n            })}\n           </ul>\n           {!cast.length && <p>We don't have any cast for this movie</p>}\n        </div>\n    )\n}\n\n","import axios from 'axios';\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"2123fea73978ac77fe6a3f347cf7ced6\";\n\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(\"/trending/all/day\", {\n        params: {\n            api_key: API_KEY\n        }\n    });\n\n    return response.data.results;\n};\n\nexport const fetchMovieById = async (movie_id) => {\n    const response = await axios.get(`/movie/${movie_id}`, {\n        params: {\n            api_key: API_KEY,\n            language: \"en-US\"\n        }\n    });\n      \n    return response.data;\n};\n\nexport const fetchMovieCast = async (movie_id) => {\n    const response = await axios.get(`/movie/${movie_id}/credits`, {\n        params: {\n            api_key: API_KEY,\n            language: \"en-US\" \n        }\n    });\n    return response.data.cast;\n}\n\nexport const fetchMovieReviews = async (movie_id) => {\n    const response = await axios.get(`/movie/${movie_id}/reviews`, {\n        params: {\n            api_key: API_KEY,\n            language: \"en-US\",\n            page: 1\n        }\n    });\n    return response.data.results;\n\n}\n\nexport const fetchMovieBySearchQuery = async (searchQuery) => {\n    const response = await axios.get(\"/search/movie\", {\n        params: {\n            api_key: API_KEY,\n            query: searchQuery,\n            language: \"en-US\",\n            page: 1,\n            include_adult: false\n        }\n       \n    });\n    return response.data.results;\n}"],"names":["CastDetails","profile_path","original_name","character","src","DefaultImage","alt","Cast","movieId","useParams","useState","cast","setCast","error","setError","useEffect","fetchMovieCast","fetchCast","catch","console","map","castValue","id","length","axios","API_KEY","fetchTrendingMovies","params","api_key","response","data","results","fetchMovieById","movie_id","language","fetchMovieReviews","page","fetchMovieBySearchQuery","searchQuery","query","include_adult"],"sourceRoot":""}