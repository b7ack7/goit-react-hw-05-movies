{"version":3,"file":"static/js/628.c5e8813d.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n:hover,\n:focus {\n    color: red;\n}\n`;\n","import { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { StyledLink } from \"./MovieList.styled\"\n\nexport const MovieList = ({movies}) => {\n    const location = useLocation();\n    return (\n     <ul>\n        {movies.map((movie) => {\n            return (\n                <li key={movie.id}>\n                    <StyledLink to={`/movies/${movie.id}`} state={{from: location}}>\n                    {movie.name? movie.name : movie.title}\n                    </StyledLink>\n                </li>\n            )\n        })}\n     </ul>\n    )\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string,\n        title: PropTypes.string\n    }))\n}","import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const SearchBar = ({onSubmit, searchQuery}) => {\n  const [query, setQuery] = useState(searchQuery || \"\");\n  const [disabledBtn, setDisabledBtn] = useState(false);\n\n  const handleOnChange = (event) => {\n    setQuery(event.target.value);\n    setDisabledBtn(false);\n  };\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault();\n    if (query.trim() === \"\") {\n        toast.error(\"Search is a required field\");\n        return;\n      }\n    onSubmit(query);\n    setDisabledBtn(true);\n  }\n\n    return (\n        <form onSubmit={handleOnSubmit}>\n            <input type=\"text\" \n            name=\"query\"\n            value={query}\n            onChange={handleOnChange}/>\n            <button type=\"submit\" disabled={disabledBtn}>Search</button>\n            </form>\n    )\n\n}\n\nSearchBar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    searchQuery: PropTypes.string\n}","import {  useSearchParams } from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport { SearchBar } from \"components/SearchBar\";\nimport { MovieList } from \"components/MovieList\";\nimport { fetchMovieBySearchQuery } from \"services/api\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(\"\");\n  \n  useEffect(() => {\n    async function fetchMovies() {\n        const movies = await fetchMovieBySearchQuery(query);\n        setMovies(movies);\n    }\n    fetchMovies().catch(error => {\n        setError(\"Something went wrong, please try again later\");\n        console.error(error);\n    });\n  }, [query])\n  \n  const getSearchQuery  = (searchQuery) => {\n    setSearchParams({query: searchQuery});\n  }\n\n  if (error) {\n    return <h1>{error}</h1>\n  }\n\n    return (\n        <div>\n           <SearchBar onSubmit={getSearchQuery} searchQuery={query}/>\n           <MovieList movies={movies}/>\n        </div>\n    )\n}\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"2123fea73978ac77fe6a3f347cf7ced6\";\n\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(\"/trending/all/day\", {\n        params: {\n            api_key: API_KEY\n        }\n    });\n\n    return response.data.results;\n};\n\nexport const fetchMovieById = async (movie_id) => {\n    const response = await axios.get(`/movie/${movie_id}`, {\n        params: {\n            api_key: API_KEY,\n            language: \"en-US\"\n        }\n    });\n      \n    return response.data;\n};\n\nexport const fetchMovieCast = async (movie_id) => {\n    const response = await axios.get(`/movie/${movie_id}/credits`, {\n        params: {\n            api_key: API_KEY,\n            language: \"en-US\" \n        }\n    });\n    return response.data.cast;\n}\n\nexport const fetchMovieReviews = async (movie_id) => {\n    const response = await axios.get(`/movie/${movie_id}/reviews`, {\n        params: {\n            api_key: API_KEY,\n            language: \"en-US\",\n            page: 1\n        }\n    });\n    return response.data.results;\n\n}\n\nexport const fetchMovieBySearchQuery = async (searchQuery) => {\n    const response = await axios.get(\"/search/movie\", {\n        params: {\n            api_key: API_KEY,\n            query: searchQuery,\n            language: \"en-US\",\n            page: 1,\n            include_adult: false\n        }\n       \n    });\n    return response.data.results;\n}"],"names":["StyledLink","styled","Link","MovieList","movies","location","useLocation","map","movie","to","id","state","from","name","title","SearchBar","onSubmit","searchQuery","useState","query","setQuery","disabledBtn","setDisabledBtn","event","preventDefault","trim","toast","type","value","onChange","target","disabled","useSearchParams","searchParams","setSearchParams","get","setMovies","error","setError","useEffect","fetchMovieBySearchQuery","fetchMovies","catch","console","axios","API_KEY","fetchTrendingMovies","params","api_key","response","data","results","fetchMovieById","movie_id","language","fetchMovieCast","cast","fetchMovieReviews","page","include_adult"],"sourceRoot":""}