{"version":3,"file":"static/js/603.fd78c177.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\ndisplay: inline-flex;\nalign-items: center;\ngap: 4px;\npadding: 4px 0;\nmargin-bottom: 12px;\ncolor: black;\ntext-decoration: none;\nfont-weight: 500;\nposition: relative;\ntransition: color 250ms var(--timing-function);\n::after {\n    content: \"\";\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    display: block;\n    height: 2px;\n    border-radius: 2px;\n    background-color: red;\n    width: 0%;\n    transition: width 250ms var(--timing-function);\n}\n:hover::after,\n:focus::after {\n    color: red;\n    width: 100%;\n}\n:hover,\n:focus {\n    color: red;\n}\n`;","import { HiArrowLeft } from \"react-icons/hi\";\nimport PropTypes from 'prop-types';\nimport { StyledLink } from \"./BackLink.styled\";\n\nexport const BackLink = ({to}) => {\n    return (\n        <StyledLink to={to}>\n        <HiArrowLeft size=\"16\"/>\n        Go back\n        </StyledLink>\n    )\n}\n\nBackLink.propTypes = {\n    to: PropTypes.shape({\n        path: PropTypes.string\n    })\n}","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\ndisplay: flex;\ngap: 12px;\npadding-bottom: 8px;\nborder-bottom: 1px solid black;\n`;\n\n","import PropTypes from 'prop-types';\nimport { Wrapper } from './MovieInfo.styled';\n\nconst IMAGES_BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n\nexport const MovieInfo = ({poster_path, title, release_date, vote_average, overview, genres}) => {\n    return (\n    <Wrapper>\n      {poster_path && <img src={IMAGES_BASE_URL + poster_path} alt={title} />}\n      <div>\n      <h2>{title} ({release_date?.slice(0, 4)})</h2>\n      <p>User Score: {Math.round(vote_average * 10)}%</p>\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <h3>Genres</h3>\n      <p>{genres?.map(genre => genre.name).join(\" \")}</p>\n      </div>\n    </Wrapper>  \n        \n    )\n}\n\nMovieInfo.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  release_date: PropTypes.string,\n  vote_average: PropTypes.number,\n  overview: PropTypes.string,\n  genres: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string\n  }))\n}","import { useParams, Link, Outlet, useLocation } from \"react-router-dom\";\nimport { useEffect, useState, Suspense } from \"react\";\nimport { fetchMovieById} from \"services/api\";\nimport { BackLink } from \"components/BackLink\";\nimport { MovieInfo } from \"components/MovieInfo\";\nimport { Loader } from \"components/Loader\";\n\n\n\n\nconst MovieDetails = () => {\n  const {movieId} = useParams();\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(\"\");\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? \"/\";\n  \n  useEffect(() => {\n    async function fetchMovie() {\n        const movie = await fetchMovieById(movieId);\n        setMovie(movie);\n    }\n    fetchMovie().catch(error => {\n        setError(\"The resource you requested could not be found.\");\n        console.error(error);\n    }); \n    \n  }, [movieId]);\n\n  if (error) {\n    return (\n        <div>\n            <BackLink to={backLinkHref} />\n            <h1>{error}</h1>\n        </div>\n    )\n  }\n\n    return (\n        <div>\n            <BackLink to={backLinkHref} />\n            <MovieInfo \n            poster_path={movie.poster_path}\n            title={movie.title}\n            release_date={movie.release_date}\n            vote_average={movie.vote_average}\n            overview={movie.overview}\n            genres={movie.genres}/>\n           <p>Additional information</p>\n             <ul style={{borderBottom: \"1px solid black\", paddingBottom: 12}}>\n                <li>\n                 <Link to=\"cast\" state={{from: backLinkHref}}>Cast</Link>\n                </li>\n                <li>\n                 <Link to=\"reviews\" state={{from: backLinkHref}}>Reviews</Link>\n                </li>\n                </ul>\n            <Suspense fallback={<Loader/>}>\n                <Outlet/>\n            </Suspense>\n        </div>\n       \n    )\n}\n\nexport default MovieDetails;\n\n\n","import axios from 'axios';\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"2123fea73978ac77fe6a3f347cf7ced6\";\n\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(\"/trending/all/day\", {\n        params: {\n            api_key: API_KEY\n        }\n    });\n\n    return response.data.results;\n};\n\nexport const fetchMovieById = async (movie_id) => {\n    const response = await axios.get(`/movie/${movie_id}`, {\n        params: {\n            api_key: API_KEY,\n            language: \"en-US\"\n        }\n    });\n      \n    return response.data;\n};\n\nexport const fetchMovieCast = async (movie_id) => {\n    const response = await axios.get(`/movie/${movie_id}/credits`, {\n        params: {\n            api_key: API_KEY,\n            language: \"en-US\" \n        }\n    });\n    return response.data.cast;\n}\n\nexport const fetchMovieReviews = async (movie_id) => {\n    const response = await axios.get(`/movie/${movie_id}/reviews`, {\n        params: {\n            api_key: API_KEY,\n            language: \"en-US\",\n            page: 1\n        }\n    });\n    return response.data.results;\n\n}\n\nexport const fetchMovieBySearchQuery = async (searchQuery) => {\n    const response = await axios.get(\"/search/movie\", {\n        params: {\n            api_key: API_KEY,\n            query: searchQuery,\n            language: \"en-US\",\n            page: 1,\n            include_adult: false\n        }\n       \n    });\n    return response.data.results;\n}"],"names":["StyledLink","styled","Link","BackLink","to","size","Wrapper","MovieInfo","poster_path","title","release_date","vote_average","overview","genres","src","alt","slice","Math","round","map","genre","name","join","movieId","useParams","useState","movie","setMovie","error","setError","backLinkHref","useLocation","state","from","useEffect","fetchMovieById","fetchMovie","catch","console","style","borderBottom","paddingBottom","Suspense","fallback","Loader","axios","API_KEY","fetchTrendingMovies","params","api_key","response","data","results","movie_id","language","fetchMovieCast","cast","fetchMovieReviews","page","fetchMovieBySearchQuery","searchQuery","query","include_adult"],"sourceRoot":""}