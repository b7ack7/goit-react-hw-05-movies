{"version":3,"file":"static/js/415.e2855da4.chunk.js","mappings":"oNAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,+D,SCCVE,EAAY,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjBC,GAAWC,EAAAA,EAAAA,MACjB,OACC,wBACIF,EAAOG,KAAI,SAACC,GACT,OACI,yBACI,SAACR,EAAD,CAAYS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAACC,KAAMP,GAArD,SACCG,EAAMK,KAAML,EAAMK,KAAOL,EAAMM,SAF3BN,EAAME,GAMtB,KAGR,C,gHCYD,UA3Ba,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACyBC,EAAAA,EAAAA,MADzB,OACUhB,EADV,OAEIY,EAAUZ,GAFd,2CADc,yBAAC,WAAD,gCAKdiB,GAAcC,OAAM,SAAAL,GAChBC,EAAS,gDACTK,QAAQN,MAAMA,EACjB,GACF,GAAE,IAECA,GACK,wBAAKA,KAIR,4BACG,4CACA,SAAC,IAAD,CAAWb,OAAQA,MAG7B,C,mMC3BDoB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHL,EAAmB,mCAAG,oGACRI,EAAAA,EAAAA,IAAU,oBAAqB,CAClDE,OAAQ,CACJC,QAASF,KAHc,cACzBG,EADyB,yBAOxBA,EAASC,KAAKC,SAPU,2CAAH,qDAUnBC,EAAc,mCAAG,WAAOC,GAAP,uFACHR,EAAAA,EAAAA,IAAA,iBAAoBQ,GAAY,CACnDN,OAAQ,CACJC,QAASF,EACTQ,SAAU,WAJQ,cACpBL,EADoB,yBAQnBA,EAASC,MARU,2CAAH,sDAWdK,EAAc,mCAAG,WAAOF,GAAP,uFACHR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,YAAwC,CAC3DN,OAAQ,CACJC,QAASF,EACTQ,SAAU,WAJQ,cACpBL,EADoB,yBAOnBA,EAASC,KAAKM,MAPK,2CAAH,sDAUdC,EAAiB,mCAAG,WAAOJ,GAAP,uFACNR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,YAAwC,CAC3DN,OAAQ,CACJC,QAASF,EACTQ,SAAU,QACVI,KAAM,KALe,cACvBT,EADuB,yBAQtBA,EAASC,KAAKC,SARQ,2CAAH,sDAYjBQ,EAAuB,mCAAG,WAAOC,GAAP,uFACZf,EAAAA,EAAAA,IAAU,gBAAiB,CAC9CE,OAAQ,CACJC,QAASF,EACTe,MAAOD,EACPN,SAAU,QACVI,KAAM,EACNI,eAAe,KAPY,cAC7Bb,EAD6B,yBAW5BA,EAASC,KAAKC,SAXc,2CAAH,qD","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n:hover,\n:focus {\n    color: red;\n}\n`;\n","import { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { StyledLink } from \"./MovieList.styled\"\n\nexport const MovieList = ({movies}) => {\n    const location = useLocation();\n    return (\n     <ul>\n        {movies.map((movie) => {\n            return (\n                <li key={movie.id}>\n                    <StyledLink to={`/movies/${movie.id}`} state={{from: location}}>\n                    {movie.name? movie.name : movie.title}\n                    </StyledLink>\n                </li>\n            )\n        })}\n     </ul>\n    )\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string,\n        title: PropTypes.string\n    }))\n}","import {useEffect, useState} from \"react\";\nimport { MovieList } from \"components/MovieList\";\nimport { fetchTrendingMovies } from \"services/api\";\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchMovies() {\n        const movies = await fetchTrendingMovies();\n        setMovies(movies);\n    }\n    fetchMovies().catch(error => {\n        setError(\"Something went wrong, please try again later\");\n        console.error(error);\n    });\n  }, [])\n\n  if (error) {\n    return <h1>{error}</h1>\n  }\n  \n    return (\n        <div>\n           <h1>Trending today</h1>\n           <MovieList movies={movies} />\n        </div>\n    )\n}\n\nexport default Home;","import axios from 'axios';\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"2123fea73978ac77fe6a3f347cf7ced6\";\n\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(\"/trending/all/day\", {\n        params: {\n            api_key: API_KEY\n        }\n    });\n\n    return response.data.results;\n};\n\nexport const fetchMovieById = async (movie_id) => {\n    const response = await axios.get(`/movie/${movie_id}`, {\n        params: {\n            api_key: API_KEY,\n            language: \"en-US\"\n        }\n    });\n      \n    return response.data;\n};\n\nexport const fetchMovieCast = async (movie_id) => {\n    const response = await axios.get(`/movie/${movie_id}/credits`, {\n        params: {\n            api_key: API_KEY,\n            language: \"en-US\" \n        }\n    });\n    return response.data.cast;\n}\n\nexport const fetchMovieReviews = async (movie_id) => {\n    const response = await axios.get(`/movie/${movie_id}/reviews`, {\n        params: {\n            api_key: API_KEY,\n            language: \"en-US\",\n            page: 1\n        }\n    });\n    return response.data.results;\n\n}\n\nexport const fetchMovieBySearchQuery = async (searchQuery) => {\n    const response = await axios.get(\"/search/movie\", {\n        params: {\n            api_key: API_KEY,\n            query: searchQuery,\n            language: \"en-US\",\n            page: 1,\n            include_adult: false\n        }\n       \n    });\n    return response.data.results;\n}"],"names":["StyledLink","styled","Link","MovieList","movies","location","useLocation","map","movie","to","id","state","from","name","title","useState","setMovies","error","setError","useEffect","fetchTrendingMovies","fetchMovies","catch","console","axios","API_KEY","params","api_key","response","data","results","fetchMovieById","movie_id","language","fetchMovieCast","cast","fetchMovieReviews","page","fetchMovieBySearchQuery","searchQuery","query","include_adult"],"sourceRoot":""}