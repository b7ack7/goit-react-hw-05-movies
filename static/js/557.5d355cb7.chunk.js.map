{"version":3,"file":"static/js/557.5d355cb7.chunk.js","mappings":"4PAEaA,EAAgB,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,QAC3C,OACI,2BACI,qCAAaD,EAAeE,aAC5B,uBAAID,MAGf,E,UCJYE,EAAU,WACrB,IAAOC,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGAC0BC,EAAAA,EAAAA,IAAkBR,GAD5C,OACUG,EADV,OAEIC,EAAWD,GAFf,2CADc,yBAAC,WAAD,gCAKdM,GAAeC,OAAM,SAAAL,GACjBC,EAAS,gDACTK,QAAQN,MAAMA,EACjB,GACF,GAAE,CAACL,IAEAK,GACK,wBAAKA,KAIR,4BACG,+BACEF,QADF,IACEA,OADF,EACEA,EAASS,KAAI,SAACC,GACX,OACI,SAAClB,EAAD,CACAC,eAAgBiB,EAAOjB,eACvBC,QAASgB,EAAOhB,SAFIgB,EAAOC,GAIlC,OAEAX,EAAQY,SAAU,uEAG9B,C,mMCrCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACRF,EAAAA,EAAAA,IAAU,oBAAqB,CAClDG,OAAQ,CACJC,QAASH,KAHc,cACzBI,EADyB,yBAOxBA,EAASC,KAAKC,SAPU,2CAAH,qDAUnBC,EAAc,mCAAG,WAAOC,GAAP,uFACHT,EAAAA,EAAAA,IAAA,iBAAoBS,GAAY,CACnDN,OAAQ,CACJC,QAASH,EACTS,SAAU,WAJQ,cACpBL,EADoB,yBAQnBA,EAASC,MARU,2CAAH,sDAWdK,EAAc,mCAAG,WAAOF,GAAP,uFACHT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAwC,CAC3DN,OAAQ,CACJC,QAASH,EACTS,SAAU,WAJQ,cACpBL,EADoB,yBAOnBA,EAASC,KAAKM,MAPK,2CAAH,sDAUdpB,EAAiB,mCAAG,WAAOiB,GAAP,uFACNT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAwC,CAC3DN,OAAQ,CACJC,QAASH,EACTS,SAAU,QACVG,KAAM,KALe,cACvBR,EADuB,yBAQtBA,EAASC,KAAKC,SARQ,2CAAH,sDAYjBO,EAAuB,mCAAG,WAAOC,GAAP,uFACZf,EAAAA,EAAAA,IAAU,gBAAiB,CAC9CG,OAAQ,CACJC,QAASH,EACTe,MAAOD,EACPL,SAAU,QACVG,KAAM,EACNI,eAAe,KAPY,cAC7BZ,EAD6B,yBAW5BA,EAASC,KAAKC,SAXc,2CAAH,qD","sources":["components/ReviewDetails/ReviewDetails.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const ReviewDetails = ({author_details, content}) => {\n    return (\n        <li>\n            <h2>Author: {author_details.username}</h2>\n            <p>{content}</p>\n        </li>\n    )\n}\n\nReviewDetails.propTypes = {\n    author_details: PropTypes.shape({\n        username: PropTypes.string\n    }),\n    content: PropTypes.string\n}","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { ReviewDetails } from \"components/ReviewDetails\";\nimport { fetchMovieReviews } from \"services/api\";\n\nexport const Reviews = () => {\n  const {movieId} = useParams(); \n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchReviews() {\n        const reviews = await fetchMovieReviews(movieId);\n        setReviews(reviews);\n    }\n    fetchReviews().catch(error => {\n        setError(\"Something went wrong, please try again later\");\n        console.error(error);\n    });\n  }, [movieId])\n\n  if (error) {\n    return <h1>{error}</h1>\n  } \n\n    return (\n        <div>\n           <ul>\n            {reviews?.map((review) => {\n                return (\n                    <ReviewDetails key={review.id}\n                    author_details={review.author_details}\n                    content={review.content}/>\n                )\n            })}\n           </ul>\n           {!reviews.length && <p>We don't have any reviews for this movie.</p>}\n        </div>\n    )\n}\n\n","import axios from 'axios';\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"2123fea73978ac77fe6a3f347cf7ced6\";\n\nexport const fetchTrendingMovies = async () => {\n    const response = await axios.get(\"/trending/all/day\", {\n        params: {\n            api_key: API_KEY\n        }\n    });\n\n    return response.data.results;\n};\n\nexport const fetchMovieById = async (movie_id) => {\n    const response = await axios.get(`/movie/${movie_id}`, {\n        params: {\n            api_key: API_KEY,\n            language: \"en-US\"\n        }\n    });\n      \n    return response.data;\n};\n\nexport const fetchMovieCast = async (movie_id) => {\n    const response = await axios.get(`/movie/${movie_id}/credits`, {\n        params: {\n            api_key: API_KEY,\n            language: \"en-US\" \n        }\n    });\n    return response.data.cast;\n}\n\nexport const fetchMovieReviews = async (movie_id) => {\n    const response = await axios.get(`/movie/${movie_id}/reviews`, {\n        params: {\n            api_key: API_KEY,\n            language: \"en-US\",\n            page: 1\n        }\n    });\n    return response.data.results;\n\n}\n\nexport const fetchMovieBySearchQuery = async (searchQuery) => {\n    const response = await axios.get(\"/search/movie\", {\n        params: {\n            api_key: API_KEY,\n            query: searchQuery,\n            language: \"en-US\",\n            page: 1,\n            include_adult: false\n        }\n       \n    });\n    return response.data.results;\n}"],"names":["ReviewDetails","author_details","content","username","Reviews","movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchMovieReviews","fetchReviews","catch","console","map","review","id","length","axios","API_KEY","fetchTrendingMovies","params","api_key","response","data","results","fetchMovieById","movie_id","language","fetchMovieCast","cast","page","fetchMovieBySearchQuery","searchQuery","query","include_adult"],"sourceRoot":""}